name: Main

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  release:
    types:
      - published

env:
  FRONTEND_PROJECT_NAME: zdielaj-si-frontend
  BACKEND_PROJECT_NAME: zdielaj-si-backend
  ORGANIZATION: juffalow

jobs:
  lint_backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-node@v1
      with:
        node-version: '14.x'
    - name: Install dependencies
      run: |
        cd ./backend
        yarn install
    - name: Lint
      run: |
        cd ./backend
        yarn run lint
    - name: build
      run: |
        cd ./backend
        mv ./src/config.example.ts ./src/config.ts
        yarn run build
  lint_frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-node@v1
      with:
        node-version: '14.x'
    - name: Install dependencies
      run: |
        cd ./frontend
        yarn install
    - name: Lint
      run: |
        cd ./frontend
        yarn run lint
    - name: build
      run: |
        cd ./frontend
        mv ./src/config.example.ts ./src/config.ts
        CI=false yarn run build
  push_version_backend:
    name: Push container
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    needs: lint_backend
    steps:
    - uses: actions/checkout@v2
    - name: Rename config
      run: |
        cd ./backend
        mv ./src/config.example.ts ./src/config.ts
    - name: Build
      run: |
        cd ./backend
        docker build -t $ORGANIZATION/$BACKEND_PROJECT_NAME .
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    - name: Push image to Digital Ocean Container Registry
      run: |
        VERSION=${GITHUB_REF#"refs/tags/"}
        
        docker tag $ORGANIZATION/$BACKEND_PROJECT_NAME registry.digitalocean.com/$ORGANIZATION/$BACKEND_PROJECT_NAME:$VERSION
        
        doctl auth init
        doctl registry login
        
        docker push registry.digitalocean.com/$ORGANIZATION/$BACKEND_PROJECT_NAME:$VERSION
  push_version_frontend:
    name: Push container
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    needs: lint_frontend
    steps:
    - uses: actions/checkout@v2
    - name: Rename config
      run: |
        cd ./frontend
        mv ./src/config.example.ts ./src/config.ts
    - name: Build
      run: |
        cd ./frontend
        docker build -t $ORGANIZATION/$FRONTEND_PROJECT_NAME .
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    - name: Push image to Digital Ocean Container Registry
      run: |
        VERSION=${GITHUB_REF#"refs/tags/"}
        
        docker tag $ORGANIZATION/$FRONTEND_PROJECT_NAME registry.digitalocean.com/$ORGANIZATION/$FRONTEND_PROJECT_NAME:$VERSION
        
        doctl auth init
        doctl registry login
        
        docker push registry.digitalocean.com/$ORGANIZATION/$FRONTEND_PROJECT_NAME:$VERSION
  deploy_prod_backend:
    needs: push_version_backend
    name: Deploy to prod
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
    - uses: actions/checkout@v2
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    - name: Obtain kubernetes config
      env:
        cluster: ${{ secrets.DIGITALOCEAN_KUBERNETES_PRODUCTION }}
      run: doctl kubernetes cluster kubeconfig save $cluster
    - name: Deploy new version
      run: |
        VERSION=${GITHUB_REF#"refs/tags/"}
        
        kubectl set image deployment/$BACKEND_PROJECT_NAME-deployment $BACKEND_PROJECT_NAME-application=registry.digitalocean.com/$ORGANIZATION/$BACKEND_PROJECT_NAME:$VERSION
  deploy_prod_frontend:
    needs: push_version_frontend
    name: Deploy to prod
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
    - uses: actions/checkout@v2
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    - name: Obtain kubernetes config
      env:
        cluster: ${{ secrets.DIGITALOCEAN_KUBERNETES_PRODUCTION }}
      run: doctl kubernetes cluster kubeconfig save $cluster
    - name: Deploy new version
      run: |
        VERSION=${GITHUB_REF#"refs/tags/"}
        
        kubectl set image deployment/$FRONTEND_PROJECT_NAME-deployment $FRONTEND_PROJECT_NAME-application=registry.digitalocean.com/$ORGANIZATION/$FRONTEND_PROJECT_NAME:$VERSION