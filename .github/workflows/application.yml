name: Application

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  release:
    types:
      - published

defaults:
  run:
    working-directory: ./application

jobs:
  build_latest_application:
    name: Build application container with latest tag
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1
    - name: Set variables
      id: vars
      run: echo ::set-output name=tag::latest
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ZDIELAJ_SI_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_ZDIELAJ_SI_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_CONTAINER_REGISTRY_REGION }}
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build, tag and push docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: zdielaj-si-application
        TAG: ${{ steps.vars.outputs.tag }}
      run: |
        docker buildx build -t $REGISTRY/$REPOSITORY:$TAG --platform linux/arm64 .
        docker push $REGISTRY/$REPOSITORY:$TAG