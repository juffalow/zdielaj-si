name: Application

on:
  push:
    branches:
      - master
  release:
    types:
      - published

defaults:
  run:
    working-directory: ./application

permissions:
  id-token: write
  contents: read

jobs:
  deploy_application_stage:
    name: Deploy application to stage
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1
    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v5.0.0
      with:
        role-to-assume: ${{ secrets.AWS_ROLE }}
        role-session-name: GitHub_to_AWS_via_FederatedOIDC
        aws-region: ${{ secrets.AWS_REGION }}
        audience: sts.amazonaws.com
    - uses: actions/setup-node@v4
      with:
        node-version: 22
    - name: Install dependencies
      run: npm ci
    - name: Build
      run: npm run build -- --mode staging
    - name: Sync build folder with S3
      run: aws s3 sync ./build/client s3://juffalow-my-projects/zdielaj-si-stage
    - name: Invalidate CloudFront cache
      run: aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CLOUDFRONT_STAGE_DISTRIBUTION_ID }} --paths "/*"
  deploy_application_prod:
    name: Deploy application to production
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1
    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v5.0.0
      with:
        role-to-assume: ${{ secrets.AWS_ROLE }}
        role-session-name: GitHub_to_AWS_via_FederatedOIDC
        aws-region: ${{ secrets.AWS_REGION }}
        audience: sts.amazonaws.com
    - uses: actions/setup-node@v4
      with:
        node-version: 22
    - name: Install dependencies
      run: npm ci
    - name: Build
      run: npm run build
    - name: Sync build folder with S3
      run: aws s3 sync ./build/client s3://juffalow-my-projects/zdielaj-si
    - name: Invalidate CloudFront cache
      run: aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CLOUDFRONT_PROD_DISTRIBUTION_ID }} --paths "/*"
